apiVersion: v1
kind: ConfigMap
metadata:
  name: polkahub-env-staging
  namespace: polkahub-staging
---
apiVersion: v1
kind: Service
metadata:
  name: polkahub-staging-svc
  namespace: polkahub-staging
spec:
  type: NodePort
  ports:
  - port: 80
    targetPort: 80
    protocol: TCP
  externalTrafficPolicy: Local
  selector:
    app: polkahub-staging
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
    name: polkahub-staging-ing
    namespace: polkahub-staging
    annotations:
        nginx.ingress.kubernetes.io/proxy-body-size: "0"
        cert-manager.io/cluster-issuer: letsencrypt-radioactive
        cert-manager.io/acme-challenge-type: dns01
        external-dns.alpha.kubernetes.io/ttl: "2m"
spec:
  tls:
  - hosts:
    - polkahub.web.radioactive.bg
    secretName: polkahub-staging
  rules:
  - host: polkahub.web.radioactive.bg
    http:
      paths:
      - path: /
        backend:
          serviceName: polkahub-staging-svc
          servicePort: 80
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: polkahub-staging
  namespace: polkahub-staging
  labels:
      app: polkahub-staging
      run: polkahub-staging
spec:
  replicas: 1
  strategy:
    type: Recreate 
  selector:
    matchLabels:
      app: polkahub-staging
      run: polkahub-staging
  template:
    metadata:
      labels:
        app: polkahub-staging
        run: polkahub-staging
    spec:
      containers:
      - name: polkahub-php-fpm
        image: radioactivehub0/polkahub-staging:_VERSION_
        imagePullPolicy: Always
        command: ['php-fpm', '--nodaemonize','-R']
        ports:
        - containerPort: 9000
      - name: polkahub-frontend
        image: radioactivehub0/polkahub-staging:_VERSION_
        imagePullPolicy: Always
        command: ['nginx', '-g', 'daemon off;']
        ports:
        - containerPort: 80
      imagePullSecrets:
      - name: dockerhub
